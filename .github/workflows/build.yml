# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Debug Build
on: [pull_request, push, workflow_dispatch]

env:
  PROJ_NAME: CanadaMod

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Read java version from gradle.properties
        id: read-java-version
        run: |
          java_version=$(grep '^java_version=' gradle.properties | cut -d'=' -f2)
          echo "java_version=$java_version" >> $GITHUB_OUTPUT
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ steps.read-java-version.outputs.java_version }}
          distribution: 'microsoft'
          cache: gradle
      - name: Loom Cache
        uses: actions/cache@v4
        with:
          path: "**/.gradle/loom-cache"
          key: "${{ runner.os }}-gradle-${{ hashFiles('**/libs.versions.*', '**/*.gradle*', '**/gradle-wrapper.properties') }}"
          restore-keys: "${{ runner.os }}-gradle-"
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Read minecraft version from gradle.properties
        id: read-minecraft-version
        run: |
          minecraft_version=$(grep '^minecraft_version=' gradle.properties | cut -d'=' -f2)
          echo "minecraft_version=$minecraft_version" >> $GITHUB_ENV
      - name: Read mod version from gradle.properties
        id: read-mod-version
        run: |
          mod_version=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
          echo "mod_version=$mod_version" >> $GITHUB_ENV
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJ_NAME }}-${{ env.minecraft_version }}-${{ env.mod_version }}
          path: build/libs